name: brew test-bot
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  test-bot:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems

      - run: brew test-bot --only-cleanup-before

      - run: brew test-bot --only-setup

      - run: brew test-bot --only-tap-syntax

      - name: Get latest release for momento-cli
        if: |
          github.event_name == 'pull_request' &&
          matrix.os == 'macos-latest'
        uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: GET /repos/{owner}/{repo}/releases/latest
          owner: momentohq
          repo: momento-cli
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download archive files
        if: |
          github.event_name == 'pull_request' &&
          matrix.os == 'macos-latest'
        run: |
          VERSION=$(echo -n ${{ fromJSON(steps.get_latest_release.outputs.data).name }} | tail -c 6)
          ARCHIVE=archive-$VERSION.tar.gz
          LOCATION=https://github.com/momentohq/momento-cli/releases/download/v$VERSION/$ARCHIVE
          echo $LOCATION
          curl -OL $LOCATION
          tar -zxvf $ARCHIVE

      - name: Cache Rust dependencies
        if: |
          github.event_name == 'pull_request' &&
          matrix.os == 'macos-latest'
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/toolchain@v1
        if: |
          github.event_name == 'pull_request' &&
          matrix.os == 'macos-latest'
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          override: true

      # Needed by prost-build.
      - name: Install Protoc
        if: |
          github.event_name == 'pull_request' &&
          matrix.os == 'macos-latest'
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build aarch64 and tar.gz for arm_big_sur
        if: |
          github.event_name == 'pull_request' &&
          matrix.os == 'macos-latest'
        run: |
          VERSION=$(echo -n ${{ fromJSON(steps.get_latest_release.outputs.data).name }} | tail -c 6)
          ARM_DIR=momento-cli
          mkdir $ARM_DIR
          mkdir $ARM_DIR/$VERSION
          mv archive-$VERSION/README.md $ARM_DIR/$VERSION
          mv archive-$VERSION/LICENSE $ARM_DIR/$VERSION
          mkdir $ARM_DIR/$VERSION/bin
          pushd archive-$VERSION
            cargo build --release --target aarch64-apple-darwin
            mv  ./target/aarch64-apple-darwin/release/momento ../$ARM_DIR/$VERSION/bin
          popd
          ls $ARM_DIR
          tar zcvf ./momento-cli-$VERSION.arm_big_sur.bottle.tar.gz $ARM_DIR

      - run: brew test-bot --only-formulae
        if: github.event_name == 'pull_request'

      - name: Upload bottles as artifact
        if: success() && github.event_name == 'pull_request'
        uses: actions/upload-artifact@main
        with:
          name: bottles
          path: "*.bottle.*"
          
  label-pr:
    name: Label pr pr-pull
    needs: test-bot
    runs-on: ubuntu-latest
    steps:
      - uses: actions-ecosystem/action-add-labels@v1
      # Only add this label to branches that update formulae in this repo
        if: github.event_name == 'pull_request' && contains(github.event.pull_request.head.ref, 'formula/')
        with:
          labels: pr-pull
          github_token: ${{ secrets.MOMENTO_MACHINE_USER_GITHUB_TOKEN }}
